<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="shark_description">

  <xacro:property name="base_width" value="0.335" />
  <xacro:property name="base_len" value="0.5" />
  <xacro:property name="base_height" value="0.235" />
  <xacro:property name="wheel_radius" value="0.055" />
  <xacro:property name="base_wheel_gap" value="0.05" />
  <xacro:property name="wheel_width" value="0.06" />
  <xacro:property name="wheel_separation" value="0.39" />
  <xacro:property name="wheel_joint_offset" value="0.0" />
  <xacro:property name="caster_height" value="0.07" />

  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="darkgray">
    <color rgba="0.2 0.2 0.2 1"/>
  </material>
  <material name="lightgray">
    <color rgba="0.8 0.8 0.8 1"/>
  </material>
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>

  
    <!-- Definições Inerciais -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${m / 12.0 * (d*d + h*h)}" ixy="0.0" ixz="0.0" iyy="${m / 12.0 * (w*w + h*h)}" iyz="0.0" izz="${m / 12.0 * (w*w + d*d)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${m*(3*r*r+h*h)/12}" ixy="0" ixz="0" iyy="${m*(3*r*r+h*h)/12}" iyz="0" izz="${m*r*r/2}"/> 
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${2.0*m*(r*r)/5.0}" ixy="0.0" ixz="0.0" iyy="${2.0*m*(r*r)/5.0}" iyz="0.0" izz="${2.0*m*(r*r)/5.0}"/>
    </inertial>
  </xacro:macro>

  <link name="base_footprint">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <material name="white"/>
        <geometry>
            <box size="0.001 0.001 0.001" />
        </geometry>
    </visual>
     <xacro:box_inertia m="8" w="0.001" h="0.001" d="0.001"/>
  </link>

  <link name="base_link">
    <visual>
      <material name="lightgray"/>
      <geometry>
        <box size="${base_len} ${base_width} ${base_height}"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <box size="${base_len} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
    <xacro:box_inertia m="1" w="${base_len}" h="${base_width}" d="0.01"/>
  </link>
 
  <joint name="base_link_joint" type="fixed">
    <origin xyz="0 0 ${base_height/2 + caster_height}" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="base_link" />
  </joint>

  <xacro:macro name="wheel" params="prefix reflect">
    <link name="${prefix}_wheel">
      <visual>
	      <material name="darkgray"/>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="0.05"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertia m="10" r="${wheel_radius}" h="0.05"/>
    </link>

    <joint name="${prefix}_wheel_joint" type="continuous">
      <axis xyz="0 1 0" rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="${prefix}_wheel"/>
      <origin xyz="${wheel_joint_offset} ${((base_width/2)+base_wheel_gap)*reflect} ${(wheel_radius - caster_height) - base_height/2}" rpy="0 0 0"/>
    </joint>
  </xacro:macro>

  <xacro:wheel prefix="left" reflect="1"/>
  <xacro:wheel prefix="right" reflect="-1"/>


  <!-- Sensors -->
  
   <!-- Velodyne -->
  <xacro:arg name="gpu" default="false"/>
  <xacro:property name="gpu" value="$(arg gpu)" />
  <xacro:arg name="organize_cloud" default="false"/>
  <xacro:property name="organize_cloud" value="$(arg organize_cloud)" />

  <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/>
  <xacro:VLP-16 parent="base_link" name="velodyne" topic="points2" organize_cloud="${organize_cloud}" hz="10" samples="440" gpu="${gpu}" min_angle="-3.1415926535897931" max_angle="0.0">
    <origin xyz="${base_len/2 - 0.07} 0 ${base_height/2}" rpy="0 0 0" />
  </xacro:VLP-16>
  
  <!-- Hokuyo -->

  <xacro:include filename="$(find freedom_vehicle)/urdf/hokuyo.xacro" />

  <xacro:sensor_hokuyo parent="base_link" xyz="${base_len/2 + 0.07/2} 0 ${- base_height/2 + 0.085/2}" rpy="3.14 0 0" name="ground"/>

  <!-- modelo da IMU -->
  <link name="imu_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
    <xacro:box_inertia m="0.01" w="0.01" d="0.01" h="0.01"/>
  </link>

  <joint name='imu_joint' type='fixed'>
    <parent link="hokuyo_ground_link"/>
    <child link="imu_link"/>
    <origin xyz="${0.07/2 - 0.01/2} 0 ${-0.085/2 - 0.01/2}" rpy="0 0 0"/>
  </joint>

  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <ros>
            <namespace>/freedom_vehicle</namespace>
            <remapping>/freedom_vehicle/imu_plugin/out:=/freedom_vehicle/imu</remapping>
        </ros>
        <topicName>imu</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

</robot>
